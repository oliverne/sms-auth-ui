{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/TermsBox.module.scss?4033","webpack:///./src/components/AppRoot.module.scss?d8c0","webpack:///./src/components/CustomInput.module.scss?53c9","webpack:///./src/components/CustomSelect.module.scss?607b","webpack:///./src/components/AppRoot.template.ts","webpack:///./src/components/AppRoot.component.ts","webpack:///./src/validators/validatePhoneNumber.ts","webpack:///./src/validators/validateRegisterNumber.ts","webpack:///./src/validators/validateName.ts","webpack:///./src/components/CustomInput.component.ts","webpack:///./src/validators/index.ts","webpack:///./src/components/CustomSelect.component.ts","webpack:///./src/components/TermsBox.component.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","main","header","title","desc","form","notice","iconQuestion","noticeDetail","submit","submitButton","defaultState","registerNumber","carrierCode","phoneNumber","termsCode","HTMLElement","super","handleStateUpdated","e","this","el","target","isValid","getAttribute","curFieldIndex","curIndex","parseInt","nextElement","querySelector","maybeInput","focus","checkAllStatesValid","removeAttribute","setAttribute","updateState","handleSubmitOnly","HTMLButtonElement","type","toLocaleLowerCase","console","log","state","alert","template","terms","carriers","addEventListener","render","formFields","querySelectorAll","newState","forEach","test","JSON","parse","keys","every","innerHTML","carrierSelector","stringify","termsBox","tag","validatePhoneNumber","onlyNumber","replace","formatted","length","slice","normalized","len","validateRegisterNumber","valid","validateName","handleInput","input","HTMLInputElement","validate","classList","remove","invalid","emitUpdate","handleChange","add","stateKey","getValidator","dispatchEvent","CustomEvent","bubbles","cancelable","label","maxLength","field","handleSelectChanged","HTMLSelectElement","options","selectedIndex","select","oldValue","newValue","populateOptions","selectDefaultOption","list","frag","document","createDocumentFragment","item","opt","createElement","code","innerText","description","appendChild","defaultOption","handleClick","handleCheck","agreeAll","allChecked","handleAgreeAll","preventDefault","cb","checked","populateAgreements","checks","Array","from","pass","filter","dataset","required","values","map","labelId","termsId","agrees","customElements","define","placeholder","getElementById","body","app"],"mappings":"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","file":"bundle.622db8fa.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"terms\":\"_1AiXHKnMLRjiT6Ltg1T3h3\",\"agrees\":\"_12z1kZyElQVhrD4ggiTBcB\",\"field\":\"b-oScD0RQ65--jrDA7zzu\",\"cb\":\"_1yzBy5e1I9pmby4cCK1kxt\",\"label\":\"_3SRmt_oenfia1vOFWhMdkm\",\"agreeAll\":\"_1KsJq0HyYDNnKxcUa6F83i\",\"allChecked\":\"_1ZzkggRzBm_YnOi48F890v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_4VJVVkQcnFWXnntDHrcZL\",\"header\":\"_2puRl_1pzE2GgM3KcQkqNN\",\"title\":\"_3r-XM0fXc-wIVA-SgzN9wi\",\"desc\":\"iMs34KC1EFOPqqBRheTuu\",\"form\":\"_3csEUaZ2Xr9FKhn8PEBFDw\",\"iconQuestion\":\"_1Z94NSBMQTcEBBI5tXDDtn\",\"notice\":\"_1qfiDJOO5eXXDndok8QbfC\",\"submit\":\"_2JrULxvnHgTC5yC7qBIBhA\",\"submitButton\":\"_2Y2lR3PFgsodtTJX1cGye0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"_1ZpAFfS-1n3i9yREm4diTn\",\"label\":\"_3t1nS8Z5VlbYxnCF58treu\",\"input\":\"_3pliChAPleHzMk3mo0rTe8\",\"invalid\":\"_3WaRuh2D-XGBUeMGAyq_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"RcqHhH9LfLXxnznP4lkim\",\"label\":\"_2BQIwULKd7xZUOsTqizQ_X\",\"select\":\"_1M0ihDhpTa89K62mfjEzYx\"};","import styles from './AppRoot.module.scss'\n\nconst template = `\n  <div class=\"${styles.main}\">\n    <header class=\"${styles.header}\">\n      <h1 class=\"${styles.title}\">입력정보</h1>\n      <h2 class=\"${styles.desc}\">본인 명의의 휴대폰 정보를 입력하세요</h2>\n    </header>\n\n    <div class=\"${styles.form}\">\n      <custom-select field-index=\"1\" state-key=\"carrierCode\" value=\"\" label=\"통신사\"></custom-select>\n\n      <custom-input field-index=\"2\" state-key=\"phoneNumber\" value=\"\" label=\"휴대폰 번호\" max-length=\"13\"></custom-input>\n      <custom-input field-index=\"3\" state-key=\"registerNumber\" value=\"\" label=\"주민등록번호\" max-length=\"8\"></custom-input>\n      <custom-input field-index=\"4\" state-key=\"name\" value=\"\" label=\"이름\" max-length=\"10\"></custom-input>\n\n      <div class=\"${styles.notice}\">\n        <i class=\"${styles.iconQuestion}\"></i>\n        <span class=${styles.noticeDetail}>\n          모든 정보가 올바르게 입력되었음에도\n          인증번호 요청이 되지 않는 경우 가입하신 통신사에 문의해주세요.\n        </span>\n      </div>\n\n      <terms-box state-key=\"termsCode\" value=\"[]\"></terms-box>\n\n      <div class=\"${styles.submit}\">\n        <button type=\"submit\" disabled class=\"${styles.submitButton}\">인증번호요청</button>\n      </div>\n    </div>\n  </div>\n`\n\nexport default template\n","import template from './AppRoot.template'\nimport terms from '../config/terms.json'\nimport carriers from '../config/carriers.json'\n\ninterface IAppState {\n  name: string\n  registerNumber: string\n  carrierCode: string\n  phoneNumber: string\n  termsCode: string[]\n}\n\nconst defaultState = {\n  name: '',\n  registerNumber: '',\n  carrierCode: '',\n  phoneNumber: '',\n  termsCode: [],\n}\n\nexport type Carriers = typeof carriers\n\nexport type Terms = typeof terms\n\nexport default class AppRoot extends HTMLElement {\n  private template: string\n\n  private terms: Terms\n\n  private carriers: Carriers\n\n  private state: IAppState\n\n  private submitButton: HTMLButtonElement | null\n\n  static tag = 'app-root'\n\n  constructor() {\n    super()\n    this.template = template\n    this.terms = terms\n    this.carriers = carriers\n    this.state = defaultState\n    this.submitButton = null\n\n    this.addEventListener('state-updated', this.handleStateUpdated)\n    this.addEventListener('click', this.handleSubmitOnly)\n  }\n\n  connectedCallback() {\n    this.render() // 최초 한번만 렌더링\n    this.submitButton = this.querySelector('button[type=submit]')\n  }\n\n  handleStateUpdated = (e: Event) => {\n    if (!this.submitButton) return\n\n    const el = e.target\n\n    /**\n     * 폼 값이 valid 할 경우 탭을 옮기는 동작\n     */\n    if (el instanceof HTMLElement) {\n      const isValid = el.getAttribute('valid') === 'valid'\n      const curFieldIndex = el.getAttribute('field-index') || '-1'\n      const curIndex = parseInt(curFieldIndex, 10)\n\n      if (curIndex > 0) {\n        const nextElement = this.querySelector(\n          `[field-index=\"${curIndex + 1}\"]`\n        )\n        if (isValid && nextElement) {\n          const maybeInput = nextElement.querySelector('input')\n          if (maybeInput) maybeInput.focus()\n        }\n      }\n    }\n\n    const pass = this.checkAllStatesValid()\n\n    if (pass) {\n      this.submitButton.removeAttribute('disabled')\n    } else {\n      this.submitButton.setAttribute('disabled', 'disabled')\n    }\n\n    this.updateState()\n  }\n\n  updateState() {\n    const formFields = this.querySelectorAll('[state-key]')\n    const newState = defaultState\n\n    /** 배열 형식의 스트링인가? */\n    const isArrayString = (arrLikeStr: string) => /^\\[.*\\]$/.test(arrLikeStr)\n\n    formFields.forEach(el => {\n      const key = el.getAttribute('state-key')\n      const value = el.getAttribute('value')\n\n      if (key) {\n        // TODO: Map 을 써야하나. TS에서 타입 에러 없이 object 값을 교체하는 방법 고민 필요.\n        ;(newState as any)[key] =\n          value && isArrayString(value) ? JSON.parse(value) : value || ''\n      }\n    })\n\n    this.state = {\n      ...newState,\n    }\n  }\n\n  /**\n   * state-key 속성이 있는 엘리먼트의 valid 속성을 읽어서 검증을 통과했는지 체크\n   */\n  checkAllStatesValid() {\n    return Object.keys(this.state).every(key => {\n      return (\n        this.querySelector(`[state-key=${key}]`)?.getAttribute('valid') ===\n        'valid'\n      )\n    })\n  }\n\n  handleSubmitOnly = (e: Event) => {\n    if (!(e.target instanceof HTMLButtonElement)) return\n    if (e.target.type.toLocaleLowerCase() !== 'submit') return\n    if (e.target.getAttribute('disabled') === 'disabled') return\n\n    /**\n     * 최종 결과 출력. 여기서 서버 요청하면 되겠지!\n     */\n    // eslint-disable-next-line no-console\n    console.log('Result:', this.state)\n\n    // eslint-disable-next-line no-alert\n    alert('API 서버에 요청을 할 타이밍입니다. 콘솔 창을 확인하세요.')\n  }\n\n  render() {\n    this.innerHTML = this.template\n\n    // 통신사 선택 컴포넌트에 필요한 리스트를 주입\n    const carrierSelector = this.querySelector('[state-key=carrierCode]')\n    if (carrierSelector) {\n      carrierSelector.setAttribute('list', JSON.stringify(this.carriers))\n    }\n\n    // 통신사 선택 컴포넌트에 필요한 리스트를 주입\n    const termsBox = this.querySelector('[state-key=termsCode]')\n    if (termsBox) {\n      termsBox.setAttribute('list', JSON.stringify(this.terms))\n    }\n  }\n}\n","export default function validatePhoneNumber(\n  value: string\n): [boolean, string, string] {\n  const onlyNumber = value.replace(/\\D+/g, '')\n\n  let formatted = onlyNumber\n\n  if (onlyNumber.length > 3) {\n    const first = onlyNumber.slice(0, 3)\n    const last = onlyNumber.slice(3)\n    formatted = `${first} ${last}`\n  }\n\n  // 가운데 3자리\n  if (onlyNumber.length > 7) {\n    const first = onlyNumber.slice(0, 3)\n    const mid = onlyNumber.slice(3, 6)\n    const last = onlyNumber.slice(6)\n    formatted = `${first} ${mid} ${last}`\n  }\n\n  // 가운데 4자리\n  if (onlyNumber.length > 10) {\n    const first = onlyNumber.slice(0, 3)\n    const mid = onlyNumber.slice(3, 7)\n    const last = onlyNumber.slice(7)\n    formatted = `${first} ${mid} ${last}`\n  }\n\n  const normalized = formatted.replace(/\\s/g, '')\n\n  const len = normalized.length\n  const valid = len >= 10 && len <= 11\n\n  return [valid, formatted, normalized]\n}\n","export default function validateRegisterNumber(\n  value: string\n): [boolean, string, string] {\n  const onlyNumber = value.replace(/\\D+/g, '')\n\n  let formatted = onlyNumber\n\n  if (onlyNumber.length > 6) {\n    const first = onlyNumber.slice(0, 6)\n    const last = onlyNumber.slice(6)\n    formatted = `${first}-${last}`.slice(0, 8)\n  }\n\n  const valid = /\\d\\d\\d\\d\\d\\d-\\d/.test(formatted)\n\n  const normalized = formatted.replace(/-/g, '')\n\n  return [valid, formatted, normalized]\n}\n","export default function validateName(value: string): [boolean, string, string] {\n  const formatted = value.replace(/[^ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/g, '')\n\n  const hangulOnly = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/g.test(formatted)\n\n  const normalized = formatted\n\n  const valid = hangulOnly && formatted.length >= 2\n\n  return [valid, formatted, normalized]\n}\n","import styles from './CustomInput.module.scss'\n\nimport getValidator, { validateFn } from '../validators/index'\n\nexport default class CustomInput extends HTMLElement {\n  private validate: validateFn\n\n  private input: HTMLInputElement | null\n\n  static tag = 'custom-input'\n\n  constructor() {\n    super()\n    const stateKey = this.getAttribute('state-key') || '__undefined__'\n    this.validate = getValidator(stateKey)\n    this.input = null\n\n    this.addEventListener('keyup', this.handleInput)\n    this.addEventListener('change', this.handleChange)\n  }\n\n  connectedCallback() {\n    this.render()\n    this.input = this.querySelector('input')\n  }\n\n  handleInput = (e: Event) => {\n    if (this.input && e.target instanceof HTMLInputElement) {\n      const [isValid, formatted, normalized] = this.validate(e.target.value)\n\n      // 보낼값\n      this.setAttribute('value', normalized)\n\n      // 표시값\n      this.input.value = formatted\n\n      // 검증통과 여부 엘리먼트에 표시\n      if (isValid) {\n        this.setAttribute('valid', 'valid')\n        this.classList.remove(styles.invalid)\n      } else {\n        this.removeAttribute('valid')\n      }\n\n      this.emitUpdate()\n    }\n  }\n\n  handleChange = (e: Event) => {\n    if (e.target instanceof HTMLInputElement) {\n      if (this.getAttribute('valid') !== 'valid') {\n        this.classList.add(styles.invalid)\n      }\n      this.emitUpdate()\n    }\n  }\n\n  emitUpdate() {\n    // 부모로 값이 변했음을 알림\n    this.dispatchEvent(\n      new CustomEvent('state-updated', {\n        bubbles: true,\n        cancelable: true,\n      })\n    )\n  }\n\n  render() {\n    const label = this.getAttribute('label') || ''\n    const value = this.getAttribute('value') || ''\n    const maxLength = this.getAttribute('max-length') || ''\n\n    this.innerHTML = `\n      <div class=\"${styles.field}\">\n        <label class=\"${styles.label}\">${label}</label>\n        <input type=\"text\" value=\"${value}\" class=\"${styles.input}\" maxlength=\"${maxLength}\">\n      </div>\n    `\n  }\n}\n","import validatePhoneNumber from './validatePhoneNumber'\nimport validateRegisterNumber from './validateRegisterNumber'\nimport validateName from './validateName'\n\n// TODO: 튜플 타입을 좀더 알기 쉽게 정의할 방법?\nexport type validateFn = (value: string) => [Boolean, string, string]\n\nexport default function getValidator(key: string): validateFn {\n  switch (key) {\n    case 'phoneNumber':\n      return validatePhoneNumber\n\n    case 'registerNumber':\n      return validateRegisterNumber\n\n    case 'name':\n      return validateName\n\n    // 아무일도 하지 않는 검증기!\n    default:\n      return (value: string) => [false, value, value]\n  }\n}\n","import styles from './CustomSelect.module.scss'\n\nimport { Carriers } from './AppRoot.component'\n\nexport default class CustomSelect extends HTMLElement {\n  private select: HTMLSelectElement | null\n\n  static tag = 'custom-select'\n\n  // 통신사 리스트를 최상위 컴포넌트에서 받아옴\n  static get observedAttributes() {\n    return ['list']\n  }\n\n  constructor() {\n    super()\n    this.select = null\n  }\n\n  connectedCallback() {\n    this.render() // 최초 한번만 렌더링\n\n    this.select = this.querySelector<HTMLSelectElement>(`.${styles.select}`)\n    if (this.select)\n      this.select.addEventListener('change', this.handleSelectChanged)\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (name === 'list' && oldValue !== newValue) {\n      try {\n        this.populateOptions(JSON.parse(newValue))\n        this.selectDefaultOption()\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log('통신사 정보가 잘못되었습니다.')\n      }\n    }\n  }\n\n  handleSelectChanged = (e: Event) => {\n    const el = e.target\n    if (!(el instanceof HTMLSelectElement)) return\n\n    const { value } = el.options[el.selectedIndex]\n\n    this.setAttribute('value', value)\n    this.setAttribute('valid', 'valid')\n\n    // 부모로 값이 변했음을 알림\n    this.dispatchEvent(\n      new CustomEvent('state-updated', {\n        bubbles: true,\n        cancelable: true,\n      })\n    )\n  }\n\n  populateOptions(list: Carriers) {\n    if (!this.select) return\n\n    const frag = document.createDocumentFragment()\n\n    list.forEach(item => {\n      const opt = document.createElement('option')\n      opt.value = item.code\n      opt.innerText = item.description\n      frag.appendChild(opt)\n    })\n\n    this.select.appendChild(frag)\n  }\n\n  // 첫번째 옵션을 무조건 선택\n  selectDefaultOption() {\n    if (!this.select) return\n\n    const defaultOption = this.select?.options[0]\n    this.select.value = defaultOption.value\n\n    this.select.dispatchEvent(new CustomEvent('change'))\n  }\n\n  render() {\n    const label = this.getAttribute('label')\n\n    this.innerHTML = `\n      <div class=\"${styles.field}\">\n        <label class=\"${styles.label}\">${label}</label>\n        <select class=\"${styles.select}\">\n        </select>\n      </div>\n    `\n  }\n}\n","import styles from './TermsBox.module.scss'\n\nimport { Terms } from './AppRoot.component'\n\nexport default class TermsBox extends HTMLElement {\n  static tag = 'terms-box'\n\n  static get observedAttributes() {\n    return ['list']\n  }\n\n  connectedCallback() {\n    this.render()\n\n    this.addEventListener('click', this.handleClick) // 이벤트 위임\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (name === 'list' && oldValue !== newValue) {\n      try {\n        this.populateAgreements(JSON.parse(newValue))\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log('약관 정보가 잘못되었습니다.')\n      }\n    }\n  }\n\n  validate() {\n    const checks = Array.from(this.querySelectorAll('input'))\n    const pass = checks\n      .filter(cb => cb.dataset.required === 'true')\n      .every(cb => cb.checked)\n\n    const values = checks.filter(cb => cb.checked).map(cb => cb.value)\n    this.setAttribute('value', JSON.stringify(values))\n\n    if (pass) {\n      this.setAttribute('valid', 'valid')\n    } else {\n      this.removeAttribute('valid')\n    }\n\n    // 부모로 값이 변했음을 알림\n    this.dispatchEvent(\n      new CustomEvent('state-updated', {\n        bubbles: true,\n        cancelable: true,\n      })\n    )\n  }\n\n  handleClick = (e: Event) => {\n    if (e.target instanceof HTMLInputElement) {\n      this.handleCheck()\n      const agreeAll = this.querySelector(`.${styles.agreeAll}`)\n      if (agreeAll) agreeAll.classList.remove(styles.allChecked)\n    } else if (e.target instanceof HTMLButtonElement) {\n      this.handleAgreeAll(e)\n    }\n  }\n\n  handleAgreeAll = (e: Event) => {\n    e.preventDefault()\n\n    this.querySelectorAll('input').forEach(cb => {\n      cb.checked = true // eslint-disable-line no-param-reassign\n    })\n\n    const agreeAll = this.querySelector(`.${styles.agreeAll}`)\n    if (agreeAll) agreeAll.classList.add(styles.allChecked)\n\n    this.validate()\n  }\n\n  handleCheck = () => {\n    this.validate()\n  }\n\n  populateAgreements(list: Terms) {\n    const frag = document.createDocumentFragment()\n\n    list.forEach(item => {\n      const field = document.createElement('div')\n      field.classList.add(styles.field)\n\n      const labelId = `term__${item.termsId}`\n      field.innerHTML = `\n        <input\n          id=\"${labelId}\"\n          type=\"checkbox\"\n          value=\"${item.termsId}\"\n          data-required=\"${item.required}\"\n          class=\"${styles.cb}\"\n        ><label for=\"${labelId}\" class=\"${styles.label}\">${item.title}</label>\n      `\n      frag.appendChild(field)\n    })\n\n    const agrees = this.querySelector(`.${styles.agrees}`)\n    if (agrees) agrees.appendChild(frag)\n  }\n\n  render() {\n    this.innerHTML = `\n      <div class=\"${styles.terms}\">\n        <div class=\"${styles.agrees}\">\n        </div>\n        <div class=\"${styles.field}\">\n          <button type=\"button\" class=\"${styles.agreeAll}\">전체 동의하기</button>\n        </div>\n      </div>\n    `\n  }\n}\n","import './main.scss' // 글로벌 스타일\n\nimport AppRoot from './components/AppRoot.component'\nimport CustomInput from './components/CustomInput.component'\nimport CustomSelect from './components/CustomSelect.component'\nimport TermsBox from './components/TermsBox.component'\n\ncustomElements.define(AppRoot.tag, AppRoot)\ncustomElements.define(CustomInput.tag, CustomInput)\ncustomElements.define(CustomSelect.tag, CustomSelect)\ncustomElements.define(TermsBox .tag, TermsBox)\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const placeholder = document.getElementById('root') || document.body\n  const app = document.createElement('app-root')\n  placeholder.appendChild(app)\n})\n"],"sourceRoot":""}